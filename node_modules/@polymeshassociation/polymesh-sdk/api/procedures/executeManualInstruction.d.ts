import BigNumber from 'bignumber.js';
import { Instruction, Procedure } from "../../internal";
import { DefaultPortfolio, ExecuteManualInstructionParams, InstructionDetails, NumberedPortfolio } from "../../types";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
export interface Storage {
    portfolios: (DefaultPortfolio | NumberedPortfolio)[];
    instructionDetails: InstructionDetails;
    signerDid: string;
}
/**
 * @hidden
 */
export declare type Params = ExecuteManualInstructionParams & {
    id: BigNumber;
};
/**
 * @hidden
 */
export declare function prepareExecuteManualInstruction(this: Procedure<Params, Instruction, Storage>, args: Params): Promise<TransactionSpec<Instruction, ExtrinsicParams<'settlementTx', 'executeManualInstruction'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, Instruction, Storage>): Promise<ProcedureAuthorization>;
/**
 * @hidden
 */
export declare function prepareStorage(this: Procedure<Params, Instruction, Storage>, { id }: Params): Promise<Storage>;
/**
 * @hidden
 */
export declare const executeManualInstruction: () => Procedure<Params, Instruction, Storage>;
//# sourceMappingURL=executeManualInstruction.d.ts.map